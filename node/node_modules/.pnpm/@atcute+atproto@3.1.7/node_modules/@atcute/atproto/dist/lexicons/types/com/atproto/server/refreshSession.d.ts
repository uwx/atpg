import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCProcedureMetadata<null, null, {
    type: "lex";
    schema: v.ObjectSchema<{
        accessJwt: v.StringSchema<string>;
        active: v.OptionalSchema<v.BooleanSchema, undefined>;
        did: v.FormattedStringSchema<"did">;
        didDoc: v.OptionalSchema<v.UnknownSchema, undefined>;
        handle: v.FormattedStringSchema<"handle">;
        refreshJwt: v.StringSchema<string>;
        /**
         * Hosting status of the account. If not specified, then assume 'active'.
         */
        status: v.OptionalSchema<v.StringSchema<(string & {}) | "deactivated" | "suspended" | "takendown">, undefined>;
    }>;
}, "com.atproto.server.refreshSession">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCProcedures {
        'com.atproto.server.refreshSession': mainSchema;
    }
}
export {};
//# sourceMappingURL=refreshSession.d.ts.map