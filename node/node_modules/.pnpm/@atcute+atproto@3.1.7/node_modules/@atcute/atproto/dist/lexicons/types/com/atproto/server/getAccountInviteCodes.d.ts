import * as v from '@atcute/lexicons/validations';
import * as ComAtprotoServerDefs from './defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * Controls whether any new 'earned' but not 'created' invites should be created.
     * @default true
     */
    createAvailable: v.OptionalSchema<v.BooleanSchema, true>;
    /**
     * @default true
     */
    includeUsed: v.OptionalSchema<v.BooleanSchema, true>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly codes: v.ArraySchema<ComAtprotoServerDefs.inviteCodeSchema>;
    }>;
}, "com.atproto.server.getAccountInviteCodes">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.server.getAccountInviteCodes': mainSchema;
    }
}
export {};
//# sourceMappingURL=getAccountInviteCodes.d.ts.map