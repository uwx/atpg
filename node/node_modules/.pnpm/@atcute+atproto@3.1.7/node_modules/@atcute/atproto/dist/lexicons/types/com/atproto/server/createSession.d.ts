import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCProcedureMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned
         */
        allowTakendown: v.OptionalSchema<v.BooleanSchema, undefined>;
        authFactorToken: v.OptionalSchema<v.StringSchema<string>, undefined>;
        /**
         * Handle or other identifier supported by the server for the authenticating user.
         */
        identifier: v.StringSchema<string>;
        password: v.StringSchema<string>;
    }>;
}, {
    type: "lex";
    schema: v.ObjectSchema<{
        accessJwt: v.StringSchema<string>;
        active: v.OptionalSchema<v.BooleanSchema, undefined>;
        did: v.FormattedStringSchema<"did">;
        didDoc: v.OptionalSchema<v.UnknownSchema, undefined>;
        email: v.OptionalSchema<v.StringSchema<string>, undefined>;
        emailAuthFactor: v.OptionalSchema<v.BooleanSchema, undefined>;
        emailConfirmed: v.OptionalSchema<v.BooleanSchema, undefined>;
        handle: v.FormattedStringSchema<"handle">;
        refreshJwt: v.StringSchema<string>;
        /**
         * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
         */
        status: v.OptionalSchema<v.StringSchema<(string & {}) | "deactivated" | "suspended" | "takendown">, undefined>;
    }>;
}, "com.atproto.server.createSession">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $input extends v.InferXRPCBodyInput<mainSchema['input']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCProcedures {
        'com.atproto.server.createSession': mainSchema;
    }
}
export {};
//# sourceMappingURL=createSession.d.ts.map