import * as v from '@atcute/lexicons/validations';
import * as ComAtprotoSyncDefs from './defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * Hostname of the host (eg, PDS or relay) being queried.
     */
    hostname: v.StringSchema<string>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * Number of accounts on the server which are associated with the upstream host. Note that the upstream may actually have more accounts.
         */
        accountCount: v.OptionalSchema<v.IntegerSchema, undefined>;
        hostname: v.StringSchema<string>;
        /**
         * Recent repo stream event sequence number. May be delayed from actual stream processing (eg, persisted cursor not in-memory cursor).
         */
        seq: v.OptionalSchema<v.IntegerSchema, undefined>;
        readonly status: v.OptionalSchema<ComAtprotoSyncDefs.hostStatusSchema, undefined>;
    }>;
}, "com.atproto.sync.getHostStatus">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.sync.getHostStatus': mainSchema;
    }
}
export {};
//# sourceMappingURL=getHostStatus.d.ts.map