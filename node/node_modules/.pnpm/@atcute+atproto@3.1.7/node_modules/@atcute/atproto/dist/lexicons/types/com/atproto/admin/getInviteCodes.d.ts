import * as v from '@atcute/lexicons/validations';
import * as ComAtprotoServerDefs from '../server/defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * @minimum 1
     * @maximum 500
     * @default 100
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 500>]>, 100>;
    /**
     * @default "recent"
     */
    sort: v.OptionalSchema<v.StringSchema<(string & {}) | "recent" | "usage">, "recent">;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly codes: v.ArraySchema<ComAtprotoServerDefs.inviteCodeSchema>;
        cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    }>;
}, "com.atproto.admin.getInviteCodes">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.admin.getInviteCodes': mainSchema;
    }
}
export {};
//# sourceMappingURL=getInviteCodes.d.ts.map