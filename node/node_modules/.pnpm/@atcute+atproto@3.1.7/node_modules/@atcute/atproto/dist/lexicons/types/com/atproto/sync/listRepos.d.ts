import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * @minimum 1
     * @maximum 1000
     * @default 500
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 1000>]>, 500>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
        readonly repos: v.ArraySchema<repoSchema>;
    }>;
}, "com.atproto.sync.listRepos">;
declare const _repoSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.sync.listRepos#repo">, undefined>;
    active: v.OptionalSchema<v.BooleanSchema, undefined>;
    did: v.FormattedStringSchema<"did">;
    /**
     * Current repo commit CID
     */
    head: v.FormattedStringSchema<"cid">;
    rev: v.FormattedStringSchema<"tid">;
    /**
     * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
     */
    status: v.OptionalSchema<v.StringSchema<(string & {}) | "deactivated" | "suspended" | "takendown" | "throttled" | "deleted" | "desynchronized">, undefined>;
}>;
type main$schematype = typeof _mainSchema;
type repo$schematype = typeof _repoSchema;
export interface mainSchema extends main$schematype {
}
export interface repoSchema extends repo$schematype {
}
export declare const mainSchema: mainSchema;
export declare const repoSchema: repoSchema;
export interface Repo extends v.InferInput<typeof repoSchema> {
}
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.sync.listRepos': mainSchema;
    }
}
export {};
//# sourceMappingURL=listRepos.d.ts.map