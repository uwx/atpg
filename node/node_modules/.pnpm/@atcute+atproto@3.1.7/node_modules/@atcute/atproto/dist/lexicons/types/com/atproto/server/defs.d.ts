import * as v from '@atcute/lexicons/validations';
declare const _inviteCodeSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.server.defs#inviteCode">, undefined>;
    available: v.IntegerSchema;
    code: v.StringSchema<string>;
    createdAt: v.FormattedStringSchema<"datetime">;
    createdBy: v.StringSchema<string>;
    disabled: v.BooleanSchema;
    forAccount: v.StringSchema<string>;
    readonly uses: v.ArraySchema<inviteCodeUseSchema>;
}>;
declare const _inviteCodeUseSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.server.defs#inviteCodeUse">, undefined>;
    usedAt: v.FormattedStringSchema<"datetime">;
    usedBy: v.FormattedStringSchema<"did">;
}>;
type inviteCode$schematype = typeof _inviteCodeSchema;
type inviteCodeUse$schematype = typeof _inviteCodeUseSchema;
export interface inviteCodeSchema extends inviteCode$schematype {
}
export interface inviteCodeUseSchema extends inviteCodeUse$schematype {
}
export declare const inviteCodeSchema: inviteCodeSchema;
export declare const inviteCodeUseSchema: inviteCodeUseSchema;
export interface InviteCode extends v.InferInput<typeof inviteCodeSchema> {
}
export interface InviteCodeUse extends v.InferInput<typeof inviteCodeUseSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map