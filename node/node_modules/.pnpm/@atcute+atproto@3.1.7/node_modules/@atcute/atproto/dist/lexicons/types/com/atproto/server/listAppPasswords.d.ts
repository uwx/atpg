import * as v from '@atcute/lexicons/validations';
declare const _appPasswordSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.server.listAppPasswords#appPassword">, undefined>;
    createdAt: v.FormattedStringSchema<"datetime">;
    name: v.StringSchema<string>;
    privileged: v.OptionalSchema<v.BooleanSchema, undefined>;
}>;
declare const _mainSchema: v.XRPCQueryMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly passwords: v.ArraySchema<appPasswordSchema>;
    }>;
}, "com.atproto.server.listAppPasswords">;
type appPassword$schematype = typeof _appPasswordSchema;
type main$schematype = typeof _mainSchema;
export interface appPasswordSchema extends appPassword$schematype {
}
export interface mainSchema extends main$schematype {
}
export declare const appPasswordSchema: appPasswordSchema;
export declare const mainSchema: mainSchema;
export interface AppPassword extends v.InferInput<typeof appPasswordSchema> {
}
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.server.listAppPasswords': mainSchema;
    }
}
export {};
//# sourceMappingURL=listAppPasswords.d.ts.map