import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * The DID of the repo.
     */
    did: v.FormattedStringSchema<"did">;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        active: v.BooleanSchema;
        did: v.FormattedStringSchema<"did">;
        /**
         * Optional field, the current rev of the repo, if active=true
         */
        rev: v.OptionalSchema<v.FormattedStringSchema<"tid">, undefined>;
        /**
         * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
         */
        status: v.OptionalSchema<v.StringSchema<(string & {}) | "deactivated" | "suspended" | "takendown" | "throttled" | "deleted" | "desynchronized">, undefined>;
    }>;
}, "com.atproto.sync.getRepoStatus">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.sync.getRepoStatus': mainSchema;
    }
}
export {};
//# sourceMappingURL=getRepoStatus.d.ts.map