import * as v from '@atcute/lexicons/validations';
import * as ComAtprotoLabelDefs from '../label/defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * @minimum 1
     * @maximum 250
     * @default 50
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 250>]>, 50>;
    since: v.OptionalSchema<v.IntegerSchema, undefined>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly labels: v.ArraySchema<ComAtprotoLabelDefs.labelSchema>;
    }>;
}, "com.atproto.temp.fetchLabels">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.temp.fetchLabels': mainSchema;
    }
}
export {};
//# sourceMappingURL=fetchLabels.d.ts.map