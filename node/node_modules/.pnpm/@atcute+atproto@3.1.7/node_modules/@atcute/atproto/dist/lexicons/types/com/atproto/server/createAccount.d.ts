import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCProcedureMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * Pre-existing atproto DID, being imported to a new account.
         */
        did: v.OptionalSchema<v.FormattedStringSchema<"did">, undefined>;
        email: v.OptionalSchema<v.StringSchema<string>, undefined>;
        /**
         * Requested handle for the account.
         */
        handle: v.FormattedStringSchema<"handle">;
        inviteCode: v.OptionalSchema<v.StringSchema<string>, undefined>;
        /**
         * Initial account password. May need to meet instance-specific password strength requirements.
         */
        password: v.OptionalSchema<v.StringSchema<string>, undefined>;
        /**
         * A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented.
         */
        plcOp: v.OptionalSchema<v.UnknownSchema, undefined>;
        /**
         * DID PLC rotation key (aka, recovery key) to be included in PLC creation operation.
         */
        recoveryKey: v.OptionalSchema<v.StringSchema<string>, undefined>;
        verificationCode: v.OptionalSchema<v.StringSchema<string>, undefined>;
        verificationPhone: v.OptionalSchema<v.StringSchema<string>, undefined>;
    }>;
}, {
    type: "lex";
    schema: v.ObjectSchema<{
        accessJwt: v.StringSchema<string>;
        /**
         * The DID of the new account.
         */
        did: v.FormattedStringSchema<"did">;
        /**
         * Complete DID document.
         */
        didDoc: v.OptionalSchema<v.UnknownSchema, undefined>;
        handle: v.FormattedStringSchema<"handle">;
        refreshJwt: v.StringSchema<string>;
    }>;
}, "com.atproto.server.createAccount">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $input extends v.InferXRPCBodyInput<mainSchema['input']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCProcedures {
        'com.atproto.server.createAccount': mainSchema;
    }
}
export {};
//# sourceMappingURL=createAccount.d.ts.map