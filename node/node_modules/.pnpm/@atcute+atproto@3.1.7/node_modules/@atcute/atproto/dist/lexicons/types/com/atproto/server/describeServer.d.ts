import * as v from '@atcute/lexicons/validations';
declare const _contactSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.server.describeServer#contact">, undefined>;
    email: v.OptionalSchema<v.StringSchema<string>, undefined>;
}>;
declare const _linksSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"com.atproto.server.describeServer#links">, undefined>;
    privacyPolicy: v.OptionalSchema<v.FormattedStringSchema<"uri">, undefined>;
    termsOfService: v.OptionalSchema<v.FormattedStringSchema<"uri">, undefined>;
}>;
declare const _mainSchema: v.XRPCQueryMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * List of domain suffixes that can be used in account handles.
         */
        availableUserDomains: v.ArraySchema<v.StringSchema<string>>;
        /**
         * Contact information
         */
        readonly contact: v.OptionalSchema<contactSchema, undefined>;
        did: v.FormattedStringSchema<"did">;
        /**
         * If true, an invite code must be supplied to create an account on this instance.
         */
        inviteCodeRequired: v.OptionalSchema<v.BooleanSchema, undefined>;
        /**
         * URLs of service policy documents.
         */
        readonly links: v.OptionalSchema<linksSchema, undefined>;
        /**
         * If true, a phone verification token must be supplied to create an account on this instance.
         */
        phoneVerificationRequired: v.OptionalSchema<v.BooleanSchema, undefined>;
    }>;
}, "com.atproto.server.describeServer">;
type contact$schematype = typeof _contactSchema;
type links$schematype = typeof _linksSchema;
type main$schematype = typeof _mainSchema;
export interface contactSchema extends contact$schematype {
}
export interface linksSchema extends links$schematype {
}
export interface mainSchema extends main$schematype {
}
export declare const contactSchema: contactSchema;
export declare const linksSchema: linksSchema;
export declare const mainSchema: mainSchema;
export interface Contact extends v.InferInput<typeof contactSchema> {
}
export interface Links extends v.InferInput<typeof linksSchema> {
}
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.server.describeServer': mainSchema;
    }
}
export {};
//# sourceMappingURL=describeServer.d.ts.map