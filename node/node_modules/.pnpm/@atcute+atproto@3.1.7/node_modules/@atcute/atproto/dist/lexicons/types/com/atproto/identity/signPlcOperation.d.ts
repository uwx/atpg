import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCProcedureMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        alsoKnownAs: v.OptionalSchema<v.ArraySchema<v.StringSchema<string>>, undefined>;
        rotationKeys: v.OptionalSchema<v.ArraySchema<v.StringSchema<string>>, undefined>;
        services: v.OptionalSchema<v.UnknownSchema, undefined>;
        /**
         * A token received through com.atproto.identity.requestPlcOperationSignature
         */
        token: v.OptionalSchema<v.StringSchema<string>, undefined>;
        verificationMethods: v.OptionalSchema<v.UnknownSchema, undefined>;
    }>;
}, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * A signed DID PLC operation.
         */
        operation: v.UnknownSchema;
    }>;
}, "com.atproto.identity.signPlcOperation">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $input extends v.InferXRPCBodyInput<mainSchema['input']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCProcedures {
        'com.atproto.identity.signPlcOperation': mainSchema;
    }
}
export {};
//# sourceMappingURL=signPlcOperation.d.ts.map