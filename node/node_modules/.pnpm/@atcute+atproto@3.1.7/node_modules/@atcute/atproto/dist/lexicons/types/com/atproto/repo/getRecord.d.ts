import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * The CID of the version of the record. If not specified, then return the most recent version.
     */
    cid: v.OptionalSchema<v.FormattedStringSchema<"cid">, undefined>;
    /**
     * The NSID of the record collection.
     */
    collection: v.FormattedStringSchema<"nsid">;
    /**
     * The handle or DID of the repo.
     */
    repo: v.FormattedStringSchema<"at-identifier">;
    /**
     * The Record Key.
     */
    rkey: v.FormattedStringSchema<"record-key">;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        cid: v.OptionalSchema<v.FormattedStringSchema<"cid">, undefined>;
        uri: v.FormattedStringSchema<"at-uri">;
        value: v.UnknownSchema;
    }>;
}, "com.atproto.repo.getRecord">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.repo.getRecord': mainSchema;
    }
}
export {};
//# sourceMappingURL=getRecord.d.ts.map