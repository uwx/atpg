import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * The handle or DID of the repo.
     */
    repo: v.FormattedStringSchema<"at-identifier">;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * List of all the collections (NSIDs) for which this repo contains at least one record.
         */
        collections: v.ArraySchema<v.FormattedStringSchema<"nsid">>;
        did: v.FormattedStringSchema<"did">;
        /**
         * The complete DID document for this account.
         */
        didDoc: v.UnknownSchema;
        handle: v.FormattedStringSchema<"handle">;
        /**
         * Indicates if handle is currently valid (resolves bi-directionally)
         */
        handleIsCorrect: v.BooleanSchema;
    }>;
}, "com.atproto.repo.describeRepo">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.repo.describeRepo': mainSchema;
    }
}
export {};
//# sourceMappingURL=describeRepo.d.ts.map