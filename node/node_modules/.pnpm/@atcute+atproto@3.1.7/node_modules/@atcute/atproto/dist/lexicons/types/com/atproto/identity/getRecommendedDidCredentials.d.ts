import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        alsoKnownAs: v.OptionalSchema<v.ArraySchema<v.StringSchema<string>>, undefined>;
        /**
         * Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.
         */
        rotationKeys: v.OptionalSchema<v.ArraySchema<v.StringSchema<string>>, undefined>;
        services: v.OptionalSchema<v.UnknownSchema, undefined>;
        verificationMethods: v.OptionalSchema<v.UnknownSchema, undefined>;
    }>;
}, "com.atproto.identity.getRecommendedDidCredentials">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.identity.getRecommendedDidCredentials': mainSchema;
    }
}
export {};
//# sourceMappingURL=getRecommendedDidCredentials.d.ts.map