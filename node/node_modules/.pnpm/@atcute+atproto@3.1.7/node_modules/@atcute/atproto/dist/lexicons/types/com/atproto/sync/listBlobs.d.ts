import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The DID of the repo.
     */
    did: v.FormattedStringSchema<"did">;
    /**
     * @minimum 1
     * @maximum 1000
     * @default 500
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 1000>]>, 500>;
    /**
     * Optional revision of the repo to list blobs since.
     */
    since: v.OptionalSchema<v.FormattedStringSchema<"tid">, undefined>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        cids: v.ArraySchema<v.FormattedStringSchema<"cid">>;
        cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    }>;
}, "com.atproto.sync.listBlobs">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'com.atproto.sync.listBlobs': mainSchema;
    }
}
export {};
//# sourceMappingURL=listBlobs.d.ts.map