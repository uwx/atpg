import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly suggestions: v.ArraySchema<suggestionSchema>;
    }>;
}, "app.bsky.unspecced.getTaggedSuggestions">;
declare const _suggestionSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.getTaggedSuggestions#suggestion">, undefined>;
    subject: v.FormattedStringSchema<"uri">;
    subjectType: v.StringSchema<(string & {}) | "actor" | "feed">;
    tag: v.StringSchema<string>;
}>;
type main$schematype = typeof _mainSchema;
type suggestion$schematype = typeof _suggestionSchema;
export interface mainSchema extends main$schematype {
}
export interface suggestionSchema extends suggestion$schematype {
}
export declare const mainSchema: mainSchema;
export declare const suggestionSchema: suggestionSchema;
export interface Suggestion extends v.InferInput<typeof suggestionSchema> {
}
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.unspecced.getTaggedSuggestions': mainSchema;
    }
}
export {};
//# sourceMappingURL=getTaggedSuggestions.d.ts.map