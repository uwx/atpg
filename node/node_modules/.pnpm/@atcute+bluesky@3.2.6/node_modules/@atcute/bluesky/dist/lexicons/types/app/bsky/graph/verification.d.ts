import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.RecordSchema<v.ObjectSchema<{
    $type: v.LiteralSchema<"app.bsky.graph.verification">;
    /**
     * Date of when the verification was created.
     */
    createdAt: v.FormattedStringSchema<"datetime">;
    /**
     * Display name of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current displayName matches the one at the time of verifying.
     */
    displayName: v.StringSchema<string>;
    /**
     * Handle of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current handle matches the one at the time of verifying.
     */
    handle: v.FormattedStringSchema<"handle">;
    /**
     * DID of the subject the verification applies to.
     */
    subject: v.FormattedStringSchema<"did">;
}>, v.FormattedStringSchema<"tid">>;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface Main extends v.InferInput<typeof mainSchema> {
}
declare module '@atcute/lexicons/ambient' {
    interface Records {
        'app.bsky.graph.verification': mainSchema;
    }
}
export {};
//# sourceMappingURL=verification.d.ts.map