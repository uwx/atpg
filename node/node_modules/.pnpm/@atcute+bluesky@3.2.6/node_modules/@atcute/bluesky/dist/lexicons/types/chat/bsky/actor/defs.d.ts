import * as v from '@atcute/lexicons/validations';
import * as AppBskyActorDefs from '../../../app/bsky/actor/defs.js';
import * as ComAtprotoLabelDefs from '@atcute/atproto/types/label/defs';
declare const _profileViewBasicSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"chat.bsky.actor.defs#profileViewBasic">, undefined>;
    readonly associated: v.OptionalSchema<AppBskyActorDefs.profileAssociatedSchema, undefined>;
    avatar: v.OptionalSchema<v.FormattedStringSchema<"uri">, undefined>;
    /**
     * Set to true when the actor cannot actively participate in conversations
     */
    chatDisabled: v.OptionalSchema<v.BooleanSchema, undefined>;
    did: v.FormattedStringSchema<"did">;
    /**
     * @maxLength 640
     * @maxGraphemes 64
     */
    displayName: v.OptionalSchema<v.SchemaWithConstraint<v.StringSchema<string>, readonly [v.StringLengthConstraint<0, 640>, v.StringGraphemesConstraint<0, 64>]>, undefined>;
    handle: v.FormattedStringSchema<"handle">;
    readonly labels: v.OptionalSchema<v.ArraySchema<ComAtprotoLabelDefs.labelSchema>, undefined>;
    readonly verification: v.OptionalSchema<AppBskyActorDefs.verificationStateSchema, undefined>;
    readonly viewer: v.OptionalSchema<AppBskyActorDefs.viewerStateSchema, undefined>;
}>;
type profileViewBasic$schematype = typeof _profileViewBasicSchema;
export interface profileViewBasicSchema extends profileViewBasic$schematype {
}
export declare const profileViewBasicSchema: profileViewBasicSchema;
export interface ProfileViewBasic extends v.InferInput<typeof profileViewBasicSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map