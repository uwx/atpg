import * as v from '@atcute/lexicons/validations';
import * as AppBskyActorDefs from '../actor/defs.js';
import * as AppBskyFeedDefs from '../feed/defs.js';
declare const _ageAssuranceEventSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#ageAssuranceEvent">, undefined>;
    /**
     * The unique identifier for this instance of the age assurance flow, in UUID format.
     */
    attemptId: v.StringSchema<string>;
    /**
     * The IP address used when completing the AA flow.
     */
    completeIp: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The user agent used when completing the AA flow.
     */
    completeUa: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The date and time of this write operation.
     */
    createdAt: v.FormattedStringSchema<"datetime">;
    /**
     * The email used for AA.
     */
    email: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The IP address used when initiating the AA flow.
     */
    initIp: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The user agent used when initiating the AA flow.
     */
    initUa: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * The status of the age assurance process.
     */
    status: v.StringSchema<(string & {}) | "unknown" | "assured" | "pending">;
}>;
declare const _ageAssuranceStateSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#ageAssuranceState">, undefined>;
    /**
     * The timestamp when this state was last updated.
     */
    lastInitiatedAt: v.OptionalSchema<v.FormattedStringSchema<"datetime">, undefined>;
    /**
     * The status of the age assurance process.
     */
    status: v.StringSchema<(string & {}) | "blocked" | "unknown" | "assured" | "pending">;
}>;
declare const _skeletonSearchActorSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#skeletonSearchActor">, undefined>;
    did: v.FormattedStringSchema<"did">;
}>;
declare const _skeletonSearchPostSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#skeletonSearchPost">, undefined>;
    uri: v.FormattedStringSchema<"at-uri">;
}>;
declare const _skeletonSearchStarterPackSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#skeletonSearchStarterPack">, undefined>;
    uri: v.FormattedStringSchema<"at-uri">;
}>;
declare const _skeletonTrendSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#skeletonTrend">, undefined>;
    category: v.OptionalSchema<v.StringSchema<string>, undefined>;
    dids: v.ArraySchema<v.FormattedStringSchema<"did">>;
    displayName: v.StringSchema<string>;
    link: v.StringSchema<string>;
    postCount: v.IntegerSchema;
    startedAt: v.FormattedStringSchema<"datetime">;
    status: v.OptionalSchema<v.StringSchema<(string & {}) | "hot">, undefined>;
    topic: v.StringSchema<string>;
}>;
declare const _threadItemBlockedSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#threadItemBlocked">, undefined>;
    readonly author: AppBskyFeedDefs.blockedAuthorSchema;
}>;
declare const _threadItemNoUnauthenticatedSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#threadItemNoUnauthenticated">, undefined>;
}>;
declare const _threadItemNotFoundSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#threadItemNotFound">, undefined>;
}>;
declare const _threadItemPostSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#threadItemPost">, undefined>;
    /**
     * The threadgate created by the author indicates this post as a reply to be hidden for everyone consuming the thread.
     */
    hiddenByThreadgate: v.BooleanSchema;
    /**
     * This post has more parents that were not present in the response. This is just a boolean, without the number of parents.
     */
    moreParents: v.BooleanSchema;
    /**
     * This post has more replies that were not present in the response. This is a numeric value, which is best-effort and might not be accurate.
     */
    moreReplies: v.IntegerSchema;
    /**
     * This is by an account muted by the viewer requesting it.
     */
    mutedByViewer: v.BooleanSchema;
    /**
     * This post is part of a contiguous thread by the OP from the thread root. Many different OP threads can happen in the same thread.
     */
    opThread: v.BooleanSchema;
    readonly post: AppBskyFeedDefs.postViewSchema;
}>;
declare const _trendViewSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#trendView">, undefined>;
    readonly actors: v.ArraySchema<AppBskyActorDefs.profileViewBasicSchema>;
    category: v.OptionalSchema<v.StringSchema<string>, undefined>;
    displayName: v.StringSchema<string>;
    link: v.StringSchema<string>;
    postCount: v.IntegerSchema;
    startedAt: v.FormattedStringSchema<"datetime">;
    status: v.OptionalSchema<v.StringSchema<(string & {}) | "hot">, undefined>;
    topic: v.StringSchema<string>;
}>;
declare const _trendingTopicSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.defs#trendingTopic">, undefined>;
    description: v.OptionalSchema<v.StringSchema<string>, undefined>;
    displayName: v.OptionalSchema<v.StringSchema<string>, undefined>;
    link: v.StringSchema<string>;
    topic: v.StringSchema<string>;
}>;
type ageAssuranceEvent$schematype = typeof _ageAssuranceEventSchema;
type ageAssuranceState$schematype = typeof _ageAssuranceStateSchema;
type skeletonSearchActor$schematype = typeof _skeletonSearchActorSchema;
type skeletonSearchPost$schematype = typeof _skeletonSearchPostSchema;
type skeletonSearchStarterPack$schematype = typeof _skeletonSearchStarterPackSchema;
type skeletonTrend$schematype = typeof _skeletonTrendSchema;
type threadItemBlocked$schematype = typeof _threadItemBlockedSchema;
type threadItemNoUnauthenticated$schematype = typeof _threadItemNoUnauthenticatedSchema;
type threadItemNotFound$schematype = typeof _threadItemNotFoundSchema;
type threadItemPost$schematype = typeof _threadItemPostSchema;
type trendView$schematype = typeof _trendViewSchema;
type trendingTopic$schematype = typeof _trendingTopicSchema;
export interface ageAssuranceEventSchema extends ageAssuranceEvent$schematype {
}
export interface ageAssuranceStateSchema extends ageAssuranceState$schematype {
}
export interface skeletonSearchActorSchema extends skeletonSearchActor$schematype {
}
export interface skeletonSearchPostSchema extends skeletonSearchPost$schematype {
}
export interface skeletonSearchStarterPackSchema extends skeletonSearchStarterPack$schematype {
}
export interface skeletonTrendSchema extends skeletonTrend$schematype {
}
export interface threadItemBlockedSchema extends threadItemBlocked$schematype {
}
export interface threadItemNoUnauthenticatedSchema extends threadItemNoUnauthenticated$schematype {
}
export interface threadItemNotFoundSchema extends threadItemNotFound$schematype {
}
export interface threadItemPostSchema extends threadItemPost$schematype {
}
export interface trendViewSchema extends trendView$schematype {
}
export interface trendingTopicSchema extends trendingTopic$schematype {
}
export declare const ageAssuranceEventSchema: ageAssuranceEventSchema;
export declare const ageAssuranceStateSchema: ageAssuranceStateSchema;
export declare const skeletonSearchActorSchema: skeletonSearchActorSchema;
export declare const skeletonSearchPostSchema: skeletonSearchPostSchema;
export declare const skeletonSearchStarterPackSchema: skeletonSearchStarterPackSchema;
export declare const skeletonTrendSchema: skeletonTrendSchema;
export declare const threadItemBlockedSchema: threadItemBlockedSchema;
export declare const threadItemNoUnauthenticatedSchema: threadItemNoUnauthenticatedSchema;
export declare const threadItemNotFoundSchema: threadItemNotFoundSchema;
export declare const threadItemPostSchema: threadItemPostSchema;
export declare const trendViewSchema: trendViewSchema;
export declare const trendingTopicSchema: trendingTopicSchema;
export interface AgeAssuranceEvent extends v.InferInput<typeof ageAssuranceEventSchema> {
}
export interface AgeAssuranceState extends v.InferInput<typeof ageAssuranceStateSchema> {
}
export interface SkeletonSearchActor extends v.InferInput<typeof skeletonSearchActorSchema> {
}
export interface SkeletonSearchPost extends v.InferInput<typeof skeletonSearchPostSchema> {
}
export interface SkeletonSearchStarterPack extends v.InferInput<typeof skeletonSearchStarterPackSchema> {
}
export interface SkeletonTrend extends v.InferInput<typeof skeletonTrendSchema> {
}
export interface ThreadItemBlocked extends v.InferInput<typeof threadItemBlockedSchema> {
}
export interface ThreadItemNoUnauthenticated extends v.InferInput<typeof threadItemNoUnauthenticatedSchema> {
}
export interface ThreadItemNotFound extends v.InferInput<typeof threadItemNotFoundSchema> {
}
export interface ThreadItemPost extends v.InferInput<typeof threadItemPostSchema> {
}
export interface TrendView extends v.InferInput<typeof trendViewSchema> {
}
export interface TrendingTopic extends v.InferInput<typeof trendingTopicSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map