import * as v from '@atcute/lexicons/validations';
import * as ChatBskyConvoDefs from './defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * @minLength 1
     * @maxLength 10
     */
    members: v.SchemaWithConstraint<v.ArraySchema<v.FormattedStringSchema<"did">>, readonly [v.ArrayLengthConstraint<1, 10>]>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        canChat: v.BooleanSchema;
        readonly convo: v.OptionalSchema<ChatBskyConvoDefs.convoViewSchema, undefined>;
    }>;
}, "chat.bsky.convo.getConvoAvailability">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'chat.bsky.convo.getConvoAvailability': mainSchema;
    }
}
export {};
//# sourceMappingURL=getConvoAvailability.d.ts.map