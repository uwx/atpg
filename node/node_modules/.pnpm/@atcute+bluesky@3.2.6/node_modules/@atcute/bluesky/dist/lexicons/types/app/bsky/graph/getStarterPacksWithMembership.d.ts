import * as v from '@atcute/lexicons/validations';
import * as AppBskyGraphDefs from './defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * The account (actor) to check for membership.
     */
    actor: v.FormattedStringSchema<"at-identifier">;
    cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * @minimum 1
     * @maximum 100
     * @default 50
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 100>]>, 50>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
        readonly starterPacksWithMembership: v.ArraySchema<starterPackWithMembershipSchema>;
    }>;
}, "app.bsky.graph.getStarterPacksWithMembership">;
declare const _starterPackWithMembershipSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.graph.getStarterPacksWithMembership#starterPackWithMembership">, undefined>;
    readonly listItem: v.OptionalSchema<AppBskyGraphDefs.listItemViewSchema, undefined>;
    readonly starterPack: AppBskyGraphDefs.starterPackViewSchema;
}>;
type main$schematype = typeof _mainSchema;
type starterPackWithMembership$schematype = typeof _starterPackWithMembershipSchema;
export interface mainSchema extends main$schematype {
}
export interface starterPackWithMembershipSchema extends starterPackWithMembership$schematype {
}
export declare const mainSchema: mainSchema;
export declare const starterPackWithMembershipSchema: starterPackWithMembershipSchema;
export interface StarterPackWithMembership extends v.InferInput<typeof starterPackWithMembershipSchema> {
}
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.graph.getStarterPacksWithMembership': mainSchema;
    }
}
export {};
//# sourceMappingURL=getStarterPacksWithMembership.d.ts.map