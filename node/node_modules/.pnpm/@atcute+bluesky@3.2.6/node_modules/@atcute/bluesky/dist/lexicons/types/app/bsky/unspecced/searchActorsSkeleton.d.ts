import * as v from '@atcute/lexicons/validations';
import * as AppBskyUnspeccedDefs from './defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * Optional pagination mechanism; may not necessarily allow scrolling through entire result set.
     */
    cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * @minimum 1
     * @maximum 100
     * @default 25
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 100>]>, 25>;
    /**
     * Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.
     */
    q: v.StringSchema<string>;
    /**
     * If true, acts as fast/simple 'typeahead' query.
     */
    typeahead: v.OptionalSchema<v.BooleanSchema, undefined>;
    /**
     * DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.
     */
    viewer: v.OptionalSchema<v.FormattedStringSchema<"did">, undefined>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly actors: v.ArraySchema<AppBskyUnspeccedDefs.skeletonSearchActorSchema>;
        cursor: v.OptionalSchema<v.StringSchema<string>, undefined>;
        /**
         * Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.
         */
        hitsTotal: v.OptionalSchema<v.IntegerSchema, undefined>;
    }>;
}, "app.bsky.unspecced.searchActorsSkeleton">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.unspecced.searchActorsSkeleton': mainSchema;
    }
}
export {};
//# sourceMappingURL=searchActorsSkeleton.d.ts.map