import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    actor: v.FormattedStringSchema<"did">;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly all: metadataSchema;
        readonly day: metadataSchema;
        readonly month: metadataSchema;
    }>;
}, "chat.bsky.moderation.getActorMetadata">;
declare const _metadataSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"chat.bsky.moderation.getActorMetadata#metadata">, undefined>;
    convos: v.IntegerSchema;
    convosStarted: v.IntegerSchema;
    messagesReceived: v.IntegerSchema;
    messagesSent: v.IntegerSchema;
}>;
type main$schematype = typeof _mainSchema;
type metadata$schematype = typeof _metadataSchema;
export interface mainSchema extends main$schematype {
}
export interface metadataSchema extends metadata$schematype {
}
export declare const mainSchema: mainSchema;
export declare const metadataSchema: metadataSchema;
export interface Metadata extends v.InferInput<typeof metadataSchema> {
}
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'chat.bsky.moderation.getActorMetadata': mainSchema;
    }
}
export {};
//# sourceMappingURL=getActorMetadata.d.ts.map