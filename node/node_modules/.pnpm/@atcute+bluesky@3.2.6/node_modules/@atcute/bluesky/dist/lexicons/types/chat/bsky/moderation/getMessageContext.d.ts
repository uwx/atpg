import * as v from '@atcute/lexicons/validations';
import * as ChatBskyConvoDefs from '../convo/defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * @default 5
     */
    after: v.OptionalSchema<v.IntegerSchema, 5>;
    /**
     * @default 5
     */
    before: v.OptionalSchema<v.IntegerSchema, 5>;
    /**
     * Conversation that the message is from. NOTE: this field will eventually be required.
     */
    convoId: v.OptionalSchema<v.StringSchema<string>, undefined>;
    messageId: v.StringSchema<string>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly messages: v.ArraySchema<v.VariantSchema<readonly [ChatBskyConvoDefs.deletedMessageViewSchema, ChatBskyConvoDefs.messageViewSchema], boolean>>;
    }>;
}, "chat.bsky.moderation.getMessageContext">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'chat.bsky.moderation.getMessageContext': mainSchema;
    }
}
export {};
//# sourceMappingURL=getMessageContext.d.ts.map