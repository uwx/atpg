import * as v from '@atcute/lexicons/validations';
import * as AppBskyFeedDefs from '../feed/defs.js';
declare const _mainSchema: v.XRPCQueryMetadata<v.ObjectSchema<{
    /**
     * @minimum 1
     * @maximum 25
     * @default 10
     */
    limit: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<1, 25>]>, 10>;
}>, {
    type: "lex";
    schema: v.ObjectSchema<{
        readonly feeds: v.ArraySchema<AppBskyFeedDefs.generatorViewSchema>;
    }>;
}, "app.bsky.unspecced.getSuggestedFeeds">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params extends v.InferInput<mainSchema['params']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.unspecced.getSuggestedFeeds': mainSchema;
    }
}
export {};
//# sourceMappingURL=getSuggestedFeeds.d.ts.map