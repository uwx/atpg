import * as v from '@atcute/lexicons/validations';
import * as ComAtprotoLabelDefs from '@atcute/atproto/types/label/defs';
import * as ComAtprotoRepoStrongRef from '@atcute/atproto/types/repo/strongRef';
declare const _mainSchema: v.RecordSchema<v.ObjectSchema<{
    $type: v.LiteralSchema<"app.bsky.actor.profile">;
    /**
     * Small image to be displayed next to posts from account. AKA, 'profile picture'
     * @accept image/png, image/jpeg
     * @maxSize 1000000
     */
    avatar: v.OptionalSchema<v.BlobSchema, undefined>;
    /**
     * Larger horizontal image to display behind profile view.
     * @accept image/png, image/jpeg
     * @maxSize 1000000
     */
    banner: v.OptionalSchema<v.BlobSchema, undefined>;
    createdAt: v.OptionalSchema<v.FormattedStringSchema<"datetime">, undefined>;
    /**
     * Free-form profile description text.
     * @maxLength 2560
     * @maxGraphemes 256
     */
    description: v.OptionalSchema<v.SchemaWithConstraint<v.StringSchema<string>, readonly [v.StringLengthConstraint<0, 2560>, v.StringGraphemesConstraint<0, 256>]>, undefined>;
    /**
     * @maxLength 640
     * @maxGraphemes 64
     */
    displayName: v.OptionalSchema<v.SchemaWithConstraint<v.StringSchema<string>, readonly [v.StringLengthConstraint<0, 640>, v.StringGraphemesConstraint<0, 64>]>, undefined>;
    readonly joinedViaStarterPack: v.OptionalSchema<ComAtprotoRepoStrongRef.mainSchema, undefined>;
    /**
     * Self-label values, specific to the Bluesky application, on the overall account.
     */
    readonly labels: v.OptionalSchema<v.VariantSchema<readonly [ComAtprotoLabelDefs.selfLabelsSchema], boolean>, undefined>;
    readonly pinnedPost: v.OptionalSchema<ComAtprotoRepoStrongRef.mainSchema, undefined>;
    /**
     * Free-form pronouns text.
     * @maxLength 200
     * @maxGraphemes 20
     */
    pronouns: v.OptionalSchema<v.SchemaWithConstraint<v.StringSchema<string>, readonly [v.StringLengthConstraint<0, 200>, v.StringGraphemesConstraint<0, 20>]>, undefined>;
    website: v.OptionalSchema<v.FormattedStringSchema<"uri">, undefined>;
}>, v.LiteralSchema<"self">>;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface Main extends v.InferInput<typeof mainSchema> {
}
declare module '@atcute/lexicons/ambient' {
    interface Records {
        'app.bsky.actor.profile': mainSchema;
    }
}
export {};
//# sourceMappingURL=profile.d.ts.map