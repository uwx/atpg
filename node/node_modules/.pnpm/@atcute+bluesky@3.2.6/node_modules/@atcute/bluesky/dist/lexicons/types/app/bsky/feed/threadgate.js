import * as v from '@atcute/lexicons/validations';
const _followerRuleSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.feed.threadgate#followerRule')),
});
const _followingRuleSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.feed.threadgate#followingRule')),
});
const _listRuleSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.feed.threadgate#listRule')),
    list: /*#__PURE__*/ v.resourceUriString(),
});
const _mainSchema = /*#__PURE__*/ v.record(
/*#__PURE__*/ v.tidString(), 
/*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.literal('app.bsky.feed.threadgate'),
    /**
     * List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.
     * @maxLength 5
     */
    get allow() {
        return /*#__PURE__*/ v.optional(
        /*#__PURE__*/ v.constrain(
        /*#__PURE__*/ v.array(
        /*#__PURE__*/ v.variant([
            followerRuleSchema,
            followingRuleSchema,
            listRuleSchema,
            mentionRuleSchema,
        ])), [/*#__PURE__*/ v.arrayLength(0, 5)]));
    },
    createdAt: /*#__PURE__*/ v.datetimeString(),
    /**
     * List of hidden reply URIs.
     * @maxLength 50
     */
    hiddenReplies: /*#__PURE__*/ v.optional(
    /*#__PURE__*/ v.constrain(/*#__PURE__*/ v.array(/*#__PURE__*/ v.resourceUriString()), [
        /*#__PURE__*/ v.arrayLength(0, 50),
    ])),
    /**
     * Reference (AT-URI) to the post record.
     */
    post: /*#__PURE__*/ v.resourceUriString(),
}));
const _mentionRuleSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.feed.threadgate#mentionRule')),
});
export const followerRuleSchema = _followerRuleSchema;
export const followingRuleSchema = _followingRuleSchema;
export const listRuleSchema = _listRuleSchema;
export const mainSchema = _mainSchema;
export const mentionRuleSchema = _mentionRuleSchema;
//# sourceMappingURL=threadgate.js.map