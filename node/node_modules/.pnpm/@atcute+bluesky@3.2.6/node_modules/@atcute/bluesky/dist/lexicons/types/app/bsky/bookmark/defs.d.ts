import * as v from '@atcute/lexicons/validations';
import * as AppBskyFeedDefs from '../feed/defs.js';
import * as ComAtprotoRepoStrongRef from '@atcute/atproto/types/repo/strongRef';
declare const _bookmarkSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.bookmark.defs#bookmark">, undefined>;
    /**
     * A strong ref to the record to be bookmarked. Currently, only `app.bsky.feed.post` records are supported.
     */
    readonly subject: ComAtprotoRepoStrongRef.mainSchema;
}>;
declare const _bookmarkViewSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.bookmark.defs#bookmarkView">, undefined>;
    createdAt: v.OptionalSchema<v.FormattedStringSchema<"datetime">, undefined>;
    readonly item: v.VariantSchema<readonly [AppBskyFeedDefs.blockedPostSchema, AppBskyFeedDefs.notFoundPostSchema, AppBskyFeedDefs.postViewSchema], boolean>;
    /**
     * A strong ref to the bookmarked record.
     */
    readonly subject: ComAtprotoRepoStrongRef.mainSchema;
}>;
type bookmark$schematype = typeof _bookmarkSchema;
type bookmarkView$schematype = typeof _bookmarkViewSchema;
export interface bookmarkSchema extends bookmark$schematype {
}
export interface bookmarkViewSchema extends bookmarkView$schematype {
}
export declare const bookmarkSchema: bookmarkSchema;
export declare const bookmarkViewSchema: bookmarkViewSchema;
export interface Bookmark extends v.InferInput<typeof bookmarkSchema> {
}
export interface BookmarkView extends v.InferInput<typeof bookmarkViewSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map