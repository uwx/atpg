import * as v from '@atcute/lexicons/validations';
declare const _liveNowConfigSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.unspecced.getConfig#liveNowConfig">, undefined>;
    did: v.FormattedStringSchema<"did">;
    domains: v.ArraySchema<v.StringSchema<string>>;
}>;
declare const _mainSchema: v.XRPCQueryMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        checkEmailConfirmed: v.OptionalSchema<v.BooleanSchema, undefined>;
        readonly liveNow: v.OptionalSchema<v.ArraySchema<liveNowConfigSchema>, undefined>;
    }>;
}, "app.bsky.unspecced.getConfig">;
type liveNowConfig$schematype = typeof _liveNowConfigSchema;
type main$schematype = typeof _mainSchema;
export interface liveNowConfigSchema extends liveNowConfig$schematype {
}
export interface mainSchema extends main$schematype {
}
export declare const liveNowConfigSchema: liveNowConfigSchema;
export declare const mainSchema: mainSchema;
export interface LiveNowConfig extends v.InferInput<typeof liveNowConfigSchema> {
}
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.unspecced.getConfig': mainSchema;
    }
}
export {};
//# sourceMappingURL=getConfig.d.ts.map