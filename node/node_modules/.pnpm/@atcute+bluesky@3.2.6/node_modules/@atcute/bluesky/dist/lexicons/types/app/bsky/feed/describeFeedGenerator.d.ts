import * as v from '@atcute/lexicons/validations';
declare const _feedSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.describeFeedGenerator#feed">, undefined>;
    uri: v.FormattedStringSchema<"at-uri">;
}>;
declare const _linksSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.describeFeedGenerator#links">, undefined>;
    privacyPolicy: v.OptionalSchema<v.StringSchema<string>, undefined>;
    termsOfService: v.OptionalSchema<v.StringSchema<string>, undefined>;
}>;
declare const _mainSchema: v.XRPCQueryMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        did: v.FormattedStringSchema<"did">;
        readonly feeds: v.ArraySchema<feedSchema>;
        readonly links: v.OptionalSchema<linksSchema, undefined>;
    }>;
}, "app.bsky.feed.describeFeedGenerator">;
type feed$schematype = typeof _feedSchema;
type links$schematype = typeof _linksSchema;
type main$schematype = typeof _mainSchema;
export interface feedSchema extends feed$schematype {
}
export interface linksSchema extends links$schematype {
}
export interface mainSchema extends main$schematype {
}
export declare const feedSchema: feedSchema;
export declare const linksSchema: linksSchema;
export declare const mainSchema: mainSchema;
export interface Feed extends v.InferInput<typeof feedSchema> {
}
export interface Links extends v.InferInput<typeof linksSchema> {
}
export interface $params {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCQueries {
        'app.bsky.feed.describeFeedGenerator': mainSchema;
    }
}
export {};
//# sourceMappingURL=describeFeedGenerator.d.ts.map