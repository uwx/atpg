import * as v from '@atcute/lexicons/validations';
const _byteSliceSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.richtext.facet#byteSlice')),
    /**
     * @minimum 0
     */
    byteEnd: /*#__PURE__*/ v.integer(),
    /**
     * @minimum 0
     */
    byteStart: /*#__PURE__*/ v.integer(),
});
const _linkSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.richtext.facet#link')),
    uri: /*#__PURE__*/ v.genericUriString(),
});
const _mainSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.richtext.facet')),
    get features() {
        return /*#__PURE__*/ v.array(/*#__PURE__*/ v.variant([linkSchema, mentionSchema, tagSchema]));
    },
    get index() {
        return byteSliceSchema;
    },
});
const _mentionSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.richtext.facet#mention')),
    did: /*#__PURE__*/ v.didString(),
});
const _tagSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('app.bsky.richtext.facet#tag')),
    /**
     * @maxLength 640
     * @maxGraphemes 64
     */
    tag: /*#__PURE__*/ v.constrain(/*#__PURE__*/ v.string(), [
        /*#__PURE__*/ v.stringLength(0, 640),
        /*#__PURE__*/ v.stringGraphemes(0, 64),
    ]),
});
export const byteSliceSchema = _byteSliceSchema;
export const linkSchema = _linkSchema;
export const mainSchema = _mainSchema;
export const mentionSchema = _mentionSchema;
export const tagSchema = _tagSchema;
//# sourceMappingURL=facet.js.map