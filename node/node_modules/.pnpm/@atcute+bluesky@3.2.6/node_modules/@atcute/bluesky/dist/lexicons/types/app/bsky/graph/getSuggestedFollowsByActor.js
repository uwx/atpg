import * as v from '@atcute/lexicons/validations';
import * as AppBskyActorDefs from '../actor/defs.js';
const _mainSchema = /*#__PURE__*/ v.query('app.bsky.graph.getSuggestedFollowsByActor', {
    params: /*#__PURE__*/ v.object({
        actor: /*#__PURE__*/ v.actorIdentifierString(),
    }),
    output: {
        type: 'lex',
        schema: /*#__PURE__*/ v.object({
            /**
             * If true, response has fallen-back to generic results, and is not scoped using relativeToDid
             * @default false
             */
            isFallback: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.boolean(), false),
            /**
             * Snowflake for this recommendation, use when submitting recommendation events.
             */
            recId: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.integer()),
            get suggestions() {
                return /*#__PURE__*/ v.array(AppBskyActorDefs.profileViewSchema);
            },
        }),
    },
});
export const mainSchema = _mainSchema;
//# sourceMappingURL=getSuggestedFollowsByActor.js.map