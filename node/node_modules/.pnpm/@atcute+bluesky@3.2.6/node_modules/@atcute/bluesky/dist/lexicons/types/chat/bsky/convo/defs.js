import * as v from '@atcute/lexicons/validations';
import * as AppBskyEmbedRecord from '../../../app/bsky/embed/record.js';
import * as AppBskyRichtextFacet from '../../../app/bsky/richtext/facet.js';
import * as ChatBskyActorDefs from '../actor/defs.js';
const _convoViewSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#convoView')),
    id: /*#__PURE__*/ v.string(),
    get lastMessage() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]));
    },
    get lastReaction() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.variant([messageAndReactionViewSchema]));
    },
    get members() {
        return /*#__PURE__*/ v.array(ChatBskyActorDefs.profileViewBasicSchema);
    },
    muted: /*#__PURE__*/ v.boolean(),
    rev: /*#__PURE__*/ v.string(),
    status: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.string()),
    unreadCount: /*#__PURE__*/ v.integer(),
});
const _deletedMessageViewSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#deletedMessageView')),
    id: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
    get sender() {
        return messageViewSenderSchema;
    },
    sentAt: /*#__PURE__*/ v.datetimeString(),
});
const _logAcceptConvoSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logAcceptConvo')),
    convoId: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
});
const _logAddReactionSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logAddReaction')),
    convoId: /*#__PURE__*/ v.string(),
    get message() {
        return /*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]);
    },
    get reaction() {
        return reactionViewSchema;
    },
    rev: /*#__PURE__*/ v.string(),
});
const _logBeginConvoSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logBeginConvo')),
    convoId: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
});
const _logCreateMessageSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logCreateMessage')),
    convoId: /*#__PURE__*/ v.string(),
    get message() {
        return /*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]);
    },
    rev: /*#__PURE__*/ v.string(),
});
const _logDeleteMessageSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logDeleteMessage')),
    convoId: /*#__PURE__*/ v.string(),
    get message() {
        return /*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]);
    },
    rev: /*#__PURE__*/ v.string(),
});
const _logLeaveConvoSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logLeaveConvo')),
    convoId: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
});
const _logMuteConvoSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logMuteConvo')),
    convoId: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
});
const _logReadMessageSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logReadMessage')),
    convoId: /*#__PURE__*/ v.string(),
    get message() {
        return /*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]);
    },
    rev: /*#__PURE__*/ v.string(),
});
const _logRemoveReactionSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logRemoveReaction')),
    convoId: /*#__PURE__*/ v.string(),
    get message() {
        return /*#__PURE__*/ v.variant([deletedMessageViewSchema, messageViewSchema]);
    },
    get reaction() {
        return reactionViewSchema;
    },
    rev: /*#__PURE__*/ v.string(),
});
const _logUnmuteConvoSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#logUnmuteConvo')),
    convoId: /*#__PURE__*/ v.string(),
    rev: /*#__PURE__*/ v.string(),
});
const _messageAndReactionViewSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#messageAndReactionView')),
    get message() {
        return messageViewSchema;
    },
    get reaction() {
        return reactionViewSchema;
    },
});
const _messageInputSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#messageInput')),
    get embed() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.variant([AppBskyEmbedRecord.mainSchema]));
    },
    /**
     * Annotations of text (mentions, URLs, hashtags, etc)
     */
    get facets() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.array(AppBskyRichtextFacet.mainSchema));
    },
    /**
     * @maxLength 10000
     * @maxGraphemes 1000
     */
    text: /*#__PURE__*/ v.constrain(/*#__PURE__*/ v.string(), [
        /*#__PURE__*/ v.stringLength(0, 10000),
        /*#__PURE__*/ v.stringGraphemes(0, 1000),
    ]),
});
const _messageRefSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#messageRef')),
    convoId: /*#__PURE__*/ v.string(),
    did: /*#__PURE__*/ v.didString(),
    messageId: /*#__PURE__*/ v.string(),
});
const _messageViewSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#messageView')),
    get embed() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.variant([AppBskyEmbedRecord.viewSchema]));
    },
    /**
     * Annotations of text (mentions, URLs, hashtags, etc)
     */
    get facets() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.array(AppBskyRichtextFacet.mainSchema));
    },
    id: /*#__PURE__*/ v.string(),
    /**
     * Reactions to this message, in ascending order of creation time.
     */
    get reactions() {
        return /*#__PURE__*/ v.optional(/*#__PURE__*/ v.array(reactionViewSchema));
    },
    rev: /*#__PURE__*/ v.string(),
    get sender() {
        return messageViewSenderSchema;
    },
    sentAt: /*#__PURE__*/ v.datetimeString(),
    /**
     * @maxLength 10000
     * @maxGraphemes 1000
     */
    text: /*#__PURE__*/ v.constrain(/*#__PURE__*/ v.string(), [
        /*#__PURE__*/ v.stringLength(0, 10000),
        /*#__PURE__*/ v.stringGraphemes(0, 1000),
    ]),
});
const _messageViewSenderSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#messageViewSender')),
    did: /*#__PURE__*/ v.didString(),
});
const _reactionViewSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#reactionView')),
    createdAt: /*#__PURE__*/ v.datetimeString(),
    get sender() {
        return reactionViewSenderSchema;
    },
    value: /*#__PURE__*/ v.string(),
});
const _reactionViewSenderSchema = /*#__PURE__*/ v.object({
    $type: /*#__PURE__*/ v.optional(/*#__PURE__*/ v.literal('chat.bsky.convo.defs#reactionViewSender')),
    did: /*#__PURE__*/ v.didString(),
});
export const convoViewSchema = _convoViewSchema;
export const deletedMessageViewSchema = _deletedMessageViewSchema;
export const logAcceptConvoSchema = _logAcceptConvoSchema;
export const logAddReactionSchema = _logAddReactionSchema;
export const logBeginConvoSchema = _logBeginConvoSchema;
export const logCreateMessageSchema = _logCreateMessageSchema;
export const logDeleteMessageSchema = _logDeleteMessageSchema;
export const logLeaveConvoSchema = _logLeaveConvoSchema;
export const logMuteConvoSchema = _logMuteConvoSchema;
export const logReadMessageSchema = _logReadMessageSchema;
export const logRemoveReactionSchema = _logRemoveReactionSchema;
export const logUnmuteConvoSchema = _logUnmuteConvoSchema;
export const messageAndReactionViewSchema = _messageAndReactionViewSchema;
export const messageInputSchema = _messageInputSchema;
export const messageRefSchema = _messageRefSchema;
export const messageViewSchema = _messageViewSchema;
export const messageViewSenderSchema = _messageViewSenderSchema;
export const reactionViewSchema = _reactionViewSchema;
export const reactionViewSenderSchema = _reactionViewSenderSchema;
//# sourceMappingURL=defs.js.map