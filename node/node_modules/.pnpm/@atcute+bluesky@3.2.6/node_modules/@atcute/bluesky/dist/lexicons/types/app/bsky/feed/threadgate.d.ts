import * as v from '@atcute/lexicons/validations';
declare const _followerRuleSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.threadgate#followerRule">, undefined>;
}>;
declare const _followingRuleSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.threadgate#followingRule">, undefined>;
}>;
declare const _listRuleSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.threadgate#listRule">, undefined>;
    list: v.FormattedStringSchema<"at-uri">;
}>;
declare const _mainSchema: v.RecordSchema<v.ObjectSchema<{
    $type: v.LiteralSchema<"app.bsky.feed.threadgate">;
    /**
     * List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.
     * @maxLength 5
     */
    readonly allow: v.OptionalSchema<v.SchemaWithConstraint<v.ArraySchema<v.VariantSchema<readonly [followerRuleSchema, followingRuleSchema, listRuleSchema, mentionRuleSchema], boolean>>, readonly [v.ArrayLengthConstraint<0, 5>]>, undefined>;
    createdAt: v.FormattedStringSchema<"datetime">;
    /**
     * List of hidden reply URIs.
     * @maxLength 50
     */
    hiddenReplies: v.OptionalSchema<v.SchemaWithConstraint<v.ArraySchema<v.FormattedStringSchema<"at-uri">>, readonly [v.ArrayLengthConstraint<0, 50>]>, undefined>;
    /**
     * Reference (AT-URI) to the post record.
     */
    post: v.FormattedStringSchema<"at-uri">;
}>, v.FormattedStringSchema<"tid">>;
declare const _mentionRuleSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.feed.threadgate#mentionRule">, undefined>;
}>;
type followerRule$schematype = typeof _followerRuleSchema;
type followingRule$schematype = typeof _followingRuleSchema;
type listRule$schematype = typeof _listRuleSchema;
type main$schematype = typeof _mainSchema;
type mentionRule$schematype = typeof _mentionRuleSchema;
export interface followerRuleSchema extends followerRule$schematype {
}
export interface followingRuleSchema extends followingRule$schematype {
}
export interface listRuleSchema extends listRule$schematype {
}
export interface mainSchema extends main$schematype {
}
export interface mentionRuleSchema extends mentionRule$schematype {
}
export declare const followerRuleSchema: followerRuleSchema;
export declare const followingRuleSchema: followingRuleSchema;
export declare const listRuleSchema: listRuleSchema;
export declare const mainSchema: mainSchema;
export declare const mentionRuleSchema: mentionRuleSchema;
export interface FollowerRule extends v.InferInput<typeof followerRuleSchema> {
}
export interface FollowingRule extends v.InferInput<typeof followingRuleSchema> {
}
export interface ListRule extends v.InferInput<typeof listRuleSchema> {
}
export interface Main extends v.InferInput<typeof mainSchema> {
}
export interface MentionRule extends v.InferInput<typeof mentionRuleSchema> {
}
declare module '@atcute/lexicons/ambient' {
    interface Records {
        'app.bsky.feed.threadgate': mainSchema;
    }
}
export {};
//# sourceMappingURL=threadgate.d.ts.map