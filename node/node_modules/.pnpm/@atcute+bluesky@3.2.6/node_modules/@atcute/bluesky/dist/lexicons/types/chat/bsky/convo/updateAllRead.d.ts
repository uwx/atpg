import * as v from '@atcute/lexicons/validations';
declare const _mainSchema: v.XRPCProcedureMetadata<null, {
    type: "lex";
    schema: v.ObjectSchema<{
        status: v.OptionalSchema<v.StringSchema<(string & {}) | "accepted" | "request">, undefined>;
    }>;
}, {
    type: "lex";
    schema: v.ObjectSchema<{
        /**
         * The count of updated convos.
         */
        updatedCount: v.IntegerSchema;
    }>;
}, "chat.bsky.convo.updateAllRead">;
type main$schematype = typeof _mainSchema;
export interface mainSchema extends main$schematype {
}
export declare const mainSchema: mainSchema;
export interface $params {
}
export interface $input extends v.InferXRPCBodyInput<mainSchema['input']> {
}
export interface $output extends v.InferXRPCBodyInput<mainSchema['output']> {
}
declare module '@atcute/lexicons/ambient' {
    interface XRPCProcedures {
        'chat.bsky.convo.updateAllRead': mainSchema;
    }
}
export {};
//# sourceMappingURL=updateAllRead.d.ts.map