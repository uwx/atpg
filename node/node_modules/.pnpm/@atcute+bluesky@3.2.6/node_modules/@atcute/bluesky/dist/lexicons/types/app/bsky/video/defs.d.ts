import * as v from '@atcute/lexicons/validations';
declare const _jobStatusSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.video.defs#jobStatus">, undefined>;
    blob: v.OptionalSchema<v.BlobSchema, undefined>;
    did: v.FormattedStringSchema<"did">;
    error: v.OptionalSchema<v.StringSchema<string>, undefined>;
    jobId: v.StringSchema<string>;
    message: v.OptionalSchema<v.StringSchema<string>, undefined>;
    /**
     * Progress within the current processing state.
     * @minimum 0
     * @maximum 100
     */
    progress: v.OptionalSchema<v.SchemaWithConstraint<v.IntegerSchema, readonly [v.IntegerRangeConstraint<0, 100>]>, undefined>;
    /**
     * The state of the video processing job. All values not listed as a known value indicate that the job is in process.
     */
    state: v.StringSchema<(string & {}) | "JOB_STATE_COMPLETED" | "JOB_STATE_FAILED">;
}>;
type jobStatus$schematype = typeof _jobStatusSchema;
export interface jobStatusSchema extends jobStatus$schematype {
}
export declare const jobStatusSchema: jobStatusSchema;
export interface JobStatus extends v.InferInput<typeof jobStatusSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map