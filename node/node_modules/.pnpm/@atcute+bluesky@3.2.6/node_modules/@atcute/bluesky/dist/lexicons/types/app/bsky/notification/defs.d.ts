import * as v from '@atcute/lexicons/validations';
declare const _activitySubscriptionSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#activitySubscription">, undefined>;
    post: v.BooleanSchema;
    reply: v.BooleanSchema;
}>;
declare const _chatPreferenceSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#chatPreference">, undefined>;
    include: v.StringSchema<(string & {}) | "accepted" | "all">;
    push: v.BooleanSchema;
}>;
declare const _filterablePreferenceSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#filterablePreference">, undefined>;
    include: v.StringSchema<(string & {}) | "all" | "follows">;
    list: v.BooleanSchema;
    push: v.BooleanSchema;
}>;
declare const _preferenceSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#preference">, undefined>;
    list: v.BooleanSchema;
    push: v.BooleanSchema;
}>;
declare const _preferencesSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#preferences">, undefined>;
    readonly chat: chatPreferenceSchema;
    readonly follow: filterablePreferenceSchema;
    readonly like: filterablePreferenceSchema;
    readonly likeViaRepost: filterablePreferenceSchema;
    readonly mention: filterablePreferenceSchema;
    readonly quote: filterablePreferenceSchema;
    readonly reply: filterablePreferenceSchema;
    readonly repost: filterablePreferenceSchema;
    readonly repostViaRepost: filterablePreferenceSchema;
    readonly starterpackJoined: preferenceSchema;
    readonly subscribedPost: preferenceSchema;
    readonly unverified: preferenceSchema;
    readonly verified: preferenceSchema;
}>;
declare const _recordDeletedSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#recordDeleted">, undefined>;
}>;
declare const _subjectActivitySubscriptionSchema: v.ObjectSchema<{
    $type: v.OptionalSchema<v.LiteralSchema<"app.bsky.notification.defs#subjectActivitySubscription">, undefined>;
    readonly activitySubscription: activitySubscriptionSchema;
    subject: v.FormattedStringSchema<"did">;
}>;
type activitySubscription$schematype = typeof _activitySubscriptionSchema;
type chatPreference$schematype = typeof _chatPreferenceSchema;
type filterablePreference$schematype = typeof _filterablePreferenceSchema;
type preference$schematype = typeof _preferenceSchema;
type preferences$schematype = typeof _preferencesSchema;
type recordDeleted$schematype = typeof _recordDeletedSchema;
type subjectActivitySubscription$schematype = typeof _subjectActivitySubscriptionSchema;
export interface activitySubscriptionSchema extends activitySubscription$schematype {
}
export interface chatPreferenceSchema extends chatPreference$schematype {
}
export interface filterablePreferenceSchema extends filterablePreference$schematype {
}
export interface preferenceSchema extends preference$schematype {
}
export interface preferencesSchema extends preferences$schematype {
}
export interface recordDeletedSchema extends recordDeleted$schematype {
}
export interface subjectActivitySubscriptionSchema extends subjectActivitySubscription$schematype {
}
export declare const activitySubscriptionSchema: activitySubscriptionSchema;
export declare const chatPreferenceSchema: chatPreferenceSchema;
export declare const filterablePreferenceSchema: filterablePreferenceSchema;
export declare const preferenceSchema: preferenceSchema;
export declare const preferencesSchema: preferencesSchema;
export declare const recordDeletedSchema: recordDeletedSchema;
export declare const subjectActivitySubscriptionSchema: subjectActivitySubscriptionSchema;
export interface ActivitySubscription extends v.InferInput<typeof activitySubscriptionSchema> {
}
export interface ChatPreference extends v.InferInput<typeof chatPreferenceSchema> {
}
export interface FilterablePreference extends v.InferInput<typeof filterablePreferenceSchema> {
}
export interface Preference extends v.InferInput<typeof preferenceSchema> {
}
export interface Preferences extends v.InferInput<typeof preferencesSchema> {
}
export interface RecordDeleted extends v.InferInput<typeof recordDeletedSchema> {
}
export interface SubjectActivitySubscription extends v.InferInput<typeof subjectActivitySubscriptionSchema> {
}
export {};
//# sourceMappingURL=defs.d.ts.map